import React from 'react'

import './styles.css'
import { storiesOf } from '@storybook/react'
import { action } from '@storybook/addon-actions'
import { linkTo } from '@storybook/addon-links'
import omit, { setDisplayName } from '../'
import { Button, Welcome } from '@storybook/react/demo'

const Card = ({ children }) => (
  <div
    style={{
      maxWidth: 400,
      margin: '100px auto',
      padding: 20,
      borderRadius: '4px',
      backgroundColor: '#fff',
      boxShadow:
        '0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)',
      display: 'flex',
      flexDirection: 'column',
      boxSizing: 'border-box',
      fontFamily: 'Roboto, sans-serif',
      color: 'rgba(0,0,0,.54)',
    }}
  >
    {children}
  </div>
)

storiesOf('Example', module)
  .add('Simple', () => (
    <Card>
      <h2>Here's a cool card</h2>
      <p>
        Maybe the text inside it is too
        {omit(
          <>
            {' '}
            long-winded, and I want to omit it from the source generated by
            storybook's info addon. To do that, I call <code>omit</code> passing
            any valid React children.
          </>,
        )}
      </p>
    </Card>
  ))
  .add('Custom', () => {
    setDisplayName('source omitted')

    return (
      <Card>
        <h2>Here's another one</h2>
        <p>
          I'll omit some source here too
          {omit(
            <>
              , but instead of showing "..." we can make it display something
              else.
              <br />
              <br />
              <small>
                Note that if you go to the previous example, it'll show the same
                name ("source omitted") because <code>setDisplayName</code> is
                global.
              </small>
            </>,
          )}
        </p>
      </Card>
    )
  })
